# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

#---------------------------
# @author: Shang Zhang
# @email: shang_zhang@foxmail.com
# @date: Sep, 3rd, 2020
#---------------------------



###------------------------The output section---------------------------###

rule differential_expression:
    input:
        matrix='{output_dir}/matrix_processing/filter.{count_method}.txt',
        classes=config.get('data_dir') + '/sample_classes.txt'
    output:
        '{output_dir}/differential_expression/{count_method}/{compare_group}/{diffexp_method}.txt'
    params:
        # positive_class=lambda wildcards: compare_groups[wildcards.compare_group][1],
        # negative_class=lambda wildcards: compare_groups[wildcards.compare_group][0]
        positive_class=compare_groups[1],
        negative_class=compare_groups[0]
    shell:
        '''{bin_dir}/differential_expression.R \
            -i {input.matrix} --classes {input.classes} \
            --method {wildcards.diffexp_method} \
            --positive-class "{params.positive_class}" \
            --negative-class "{params.negative_class}" \
            -o {output}
        '''

rule differential_expression_with_batch:
    input:
        matrix='{output_dir}/matrix_processing/filter.{count_method}.txt',
        classes=config.get('data_dir') + '/sample_classes.txt',
        batch_info=config.get('data_dir') + '/batch_info.txt'
    output:
        '{output_dir}/differential_expression_with_batch/{batch_index}/{count_method}/{compare_group}/{diffexp_method}.txt'
    params:
        positive_class=lambda wildcards: compare_groups[wildcards.compare_group][1],
        negative_class=lambda wildcards: compare_groups[wildcards.compare_group][0],
        batch_index=config['batch_index']
    shell:
        '''{bin_dir}/differential_expression.R \
            -i {input.matrix} --classes {input.classes} \
            --method {wildcards.diffexp_method} \
            --positive-class "{params.positive_class}" \
            --negative-class "{params.negative_class}" \
            --batch {input.batch_info} --batch-index {wildcards.batch_index} \
            -o {output}
        '''